name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Install dependencies
        run: yarn install --frozen-lockfile

      # 👉 恢复 MatrixCore 缓存
      - name: 📦 Restore MatrixCore Cache
        uses: actions/cache/restore@v3
        with:
          path: elog-matrixcore.cache.json
          key: elog-matrixcore-cache-${{ hashFiles('elog-matrixcore.config.js') }}
          restore-keys: elog-matrixcore-cache-

      # 👉 恢复 ModuleCycle 缓存
      - name: 📦 Restore ModuleCycle Cache
        uses: actions/cache/restore@v3
        with:
          path: elog-modulecycle.cache.json
          key: elog-modulecycle-cache-${{ hashFiles('elog-modulecycle.config.js') }}
          restore-keys: elog-modulecycle-cache-

      # 👉 同步 Notion 数据库：MatrixCore
      - name: 🔄 Sync Notion Database: MatrixCore
        run: yarn sync:matrixcore
        env:
          NOTION_TOKEN_MATRIXCORE: ${{ secrets.NOTION_TOKEN_MATRIXCORE }}
          DATABASE_ID_MATRIXCORE: ${{ secrets.DATABASE_ID_MATRIXCORE }}

      # 👉 同步 Notion 数据库：ModuleCycle
      - name: 🔄 Sync Notion Database: ModuleCycle
        run: yarn sync:modulecycle
        env:
          NOTION_TOKEN_MODULECYCLE: ${{ secrets.NOTION_TOKEN_MODULECYCLE }}
          DATABASE_ID_MODULECYCLE: ${{ secrets.DATABASE_ID_MODULECYCLE }}

      # 👉 保存 MatrixCore 缓存
      - name: 💾 Save MatrixCore Cache
        uses: actions/cache/save@v3
        with:
          path: elog-matrixcore.cache.json
          key: elog-matrixcore-cache-${{ github.run_id }}

      # 👉 保存 ModuleCycle 缓存
      - name: 💾 Save ModuleCycle Cache
        uses: actions/cache/save@v3
        with:
          path: elog-modulecycle.cache.json
          key: elog-modulecycle-cache-${{ github.run_id }}

      # 👉 可选：部署到 GitHub Pages / Vercel / Netlify
      # - name: 🚀 Deploy
      #   run: yarn export 或 yarn deploy 或其他部署命令
